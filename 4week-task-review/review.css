/* 수정 금지 */
html {
    font-size: 10px;
  }
  body {
    font-family: "Roboto", sans-serif;
    font-size: 1.4rem;
    line-height: normal;
    color: black;
  }
  .main {
    box-sizing: border-box;
    width: 980px;
    padding: 20px;
    margin: 0 auto;
    background: lightgray;
  }
  .main-heading {
    text-align: center;
    font-size: 2rem;
  }
  section {
    width: 100%;
    margin: 20px 0;
    background: lightsteelblue;
  }
  .heading {
    font-size: 1.5rem;
    font-weight: 700;
    color: blue;
  }
  
  /* 코드는 이 곳에서부터 작성합니다. */
  /* 미리 제공된 CSS 선택자 외에 추가로 필요한 선택자가 있을 경우 추가하셔도됩니다. */
  
  /* 문제 1 */
  .news-link {
    display: block;
    box-sizing: border-box;
    width: 50%;
    padding: 10px;
    margin-top: 10px;
    background: teal;
    color: inherit;
    text-decoration-line: none;
  }
  .news-item {
    background: yellowgreen;
    height: 100px;
    padding-left: 130px;
    position: relative;
  
    /* 요구되지 않은 속성입니다 */
    /* 결과물처럼 똑같이 보이기 위해서 수치변경하였습니다 . */
    /* height: 110px; */
  }
  .news-item-heading {
    font-weight: 700;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }
  .news-item-brief {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
    margin-top: 10px;
  
    /* 요구되지 않은 속성입니다. */
    /* margin-bottom: 10px; */
  }
  .news-item-thumbnail {
    width: 120px;
    position: absolute;
    top: 50%;
    left: 0;
    transform: translate(0, -50%);
  }
  
  /* 문제 2 */
  .float-container {
    width: 100%;
  }
  .float-container::after {
    content: "";
    clear: both;
    display: block;
  }
  .float-item {
    width: 50%;
    float: left;
  }
  .news-link2 {
    width: 100%;
  
    /* 1개 속성만 수정하는 문제입니다. */
    /* box-sizing: border-box; */
  }
  
  /* 문제 3 */
  .flex-container {
    background: yellowgreen;
    display: flex;
    height: 600px;
    flex-wrap: wrap;
    justify-content: center;
    align-content: center;
  }
  .flex-item {
    background: tomato;
    border: 2px dashed red;
  
    width: 150px;
    height: 150px;
    margin: 10px;
    display: flex;
    align-items: center;
    justify-content: center;
  
    /* line-height: 150px;
      text-align: center; */
  }
  
  /* 문제 4 */
  .smile-face {
    width: 200px;
    height: 200px;
    margin: 10px;
  
    /* background 단축 속성 사용 (-3) */
    /* background-image: url("smile.jpg"); */
    /* background-size: cover; */
    /* background-position: top center; */
    background: center / cover url(./smile.jpg);
    /* @ 단축속성일때 추가로 size값을 주고 싶으면
    position값 / size값 이렇게 주면됌  */
  
    border-radius: 50%;
    animation: move 2s linear 1s infinite alternate forwards;
    /* linear  :   일정한 속도로 진행  */
    /* alternate : 정해진 순서로 진행했다가 반대 순서로 진행합니다. */
  }
  .smile-face:hover {
    animation-play-state: paused;
  }
  @keyframes move {
    from {
      transform: translateX(0px) rotate(0);
    }
  
    to {
      /* "왕복" 800px입니다. 즉, 편도 400px입니다. (-5) */
      /* transform: translateX(800px) rotate(360deg); */
      transform: translateX(400px) rotate(360deg);
    }
  }
  